package com.keduit.bpro01.repository;

import java.util.Optional;
import java.util.stream.IntStream;

import javax.transaction.Transactional;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.keduit.bpro01.entity.Memo;

@SpringBootTest
public class MemoRepositoryTests {

	@Autowired
	MemoRepository memoRepository;
	
	@Test
	public void testClass() {
		System.out.println(memoRepository.getClass().getName());
	}
	
	@Test
	public void testInsertDummies() {
		IntStream.rangeClosed(1, 100).forEach(i ->{
			Memo memo = Memo.builder().memoText("적당히 넣어주세요" + i).build();
			memoRepository.save(memo);
		});
	}
	
	@Test
	public void testSelect() {
		System.out.println("******************************");
		
		Long mno = 100L;
		Optional<Memo> result = memoRepository.findById(mno);
		
		if(result.isPresent()) { //result가 있으면
			Memo memo = result.get();
			System.out.println(memo);
		}
	}
	
	@Transactional
	@Test
	public void testSelect2() {
		
		Long mno = 100L;
		Memo memo = memoRepository.getOne(mno);
		
		System.out.println("==============================");
		System.out.println(memo);
		
	}
	
	@Test
	public void testDelete() {
		Long mno = 100L;
		memoRepository.deleteById(mno);
		
	}
	
	@Test
	public void testUpdate() {
		Memo memo = Memo.builder().mno(99L).memoText("Update text......").build();
		System.out.println(memoRepository.save(memo));
//		memoRepository.save(memo);
		
	}
	
	@Test
	public void testPageDefault() {
		Pageable pageable = PageRequest.of(0, 10);
		
		Page<Memo> result = memoRepository.findAll(pageable);
		
		System.out.println(result);
		System.out.println("=============================");
		
		System.out.println("Total pages : "+ result.getTotalPages());
		System.out.println("Total count : "+ result.getTotalElements());
		System.out.println("Page Number : "+ result.getNumber());
		System.out.println("Page Size : "+ result.getSize());
		System.out.println("has next page? : " + result.hasNext());
		System.out.println("first page : " + result.isFirst());
	}
}
